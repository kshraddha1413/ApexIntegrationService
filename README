**Apex REST Callouts**
public class AnimalLocator {
    public static String getAnimalNameById(Integer Id){
        System.debug('ID:'+Id);
        Http http = new Http();
        HttpRequest request = new HttpRequest();
        request.setEndpoint('https://th-apex-http-callout.herokuapp.com/animals/' + Id);
        request.setMethod('GET');
        HttpResponse response = http.send(request);
        String name ='';
        system.debug('******response '+response.getStatusCode());
        system.debug('******response '+response.getBody());

        if (response.getStatusCode() == 200) {
            // Deserializes the JSON string into collections of primitive data types.
            Map<String, Object> results = (Map<String, Object>) JSON.deserializeUntyped(response.getBody());
            // Cast the values in the 'animals' key as a list
            Map<string,object> animals = (map<string,object>) results.get('animal');

            system.debug(animals.size());
            System.debug('Received the following animal:' + animals);
            name = string.valueOf(animals.get('name'));
            System.debug('animalname :' +  name);
            
        }
        return name;
        
    }

}

*************************

@isTest
global class AnimalLocatorMock implements HttpCalloutMock {
    // Implement this interface method
    global HTTPResponse respond(HTTPRequest request) {
        // Create a fake response
        HttpResponse response = new HttpResponse();
        response.setHeader('Content-Type', 'application/json');
        response.setBody('{"animal": {"id":1,"name":"chicken","eats":"chicken food","says":"cluck cluck"}}');
        response.setStatusCode(200);
        return response; 
    }
}



****************************
@isTest
private class AnimalLocatorTest {
    @isTest static  void testAnimalLocatorMock() {
        Test.SetMock(HttpCallOutMock.class, new AnimalLocatorMock());
        String result=AnimalLocator.getAnimalNameById(1);
        System.debug('Result:' + result);
        String expectedResult='chicken';
        System.assertEquals(result, expectedResult);
    }
}


